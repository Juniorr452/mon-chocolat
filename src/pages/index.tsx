import React from 'react';
import Head from 'next/head'
import { Container, HStack, Heading, SimpleGrid, Select, CircularProgress, Box } from '@chakra-ui/react';
import TopNav from '../components/TopNav';
import { useQuery } from 'react-query';
import ProductItem from '../components/ProductItem';

interface Product {
  id: number;
  name: string;
  price: number;
  availableQuantity: number;
}

export default function Home() {
  const { data: products, isLoading, isFetching } = useQuery<Product[]>('products', async () => {
    const response = await fetch('/api/products');
    const data = await response.json();

    return data.products;
  });

  return (
    <main>
      <Head>
        <title>Mon Chocolat</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <TopNav />

      <Container 
        maxW={{
          base: 'container.md',
          lg: 'container.lg',
          xl: 'container.xl'
        }}
        mt="12"
        mb="6"
      >
        <HStack justify="space-between">
          <HStack>
            <Heading as="h1">Store</Heading>
            {!isLoading && isFetching && (
              <CircularProgress
                isIndeterminate 
                size="30px"
                color="pink.400" 
              />
            )}
          </HStack>
          <Select
            bg="gray.300"
            color="black"
            maxW={{
              base: "200px",
              lg: "300px"
            }}
          >
            <option value="">Default sorting</option>
            <option value="">Prix (descendant)</option>
            <option value="">Prix (ascendant)</option>
          </Select>
        </HStack>
      </Container>

      <Container 
        maxW={{
          base: 'container.md',
          lg: 'container.lg',
          xl: 'container.xl'
        }}
        py="4"
      >
        {!isLoading && (
          <SimpleGrid minChildWidth="300px" gap="40px" maxW="992px" mx="auto" id="products-list">
            {products && products.map(product => <ProductItem key={product.id} {...product}/>)}
          </SimpleGrid>
        )}

        {isLoading && (
          <Box w="fit-content" mx="auto">
            <CircularProgress 
              isIndeterminate 
              color="pink.400" 
              size="100px"
              thickness="6px"
            />
          </Box>
        )}
      </Container>
    </main>
  )
}